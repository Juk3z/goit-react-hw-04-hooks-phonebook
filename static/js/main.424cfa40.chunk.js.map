{"version":3,"sources":["Components/ContactsList/styles.module.css","Components/Filter/styles.module.css","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ListItem/ListItem.js","App.js","index.js","Components/Form/styles.module.css","Components/ContactsList/ListItem/styles.module.css"],"names":["module","exports","ConctactsList","children","className","styles","contactsList","Form","sendData","useState","name","setName","number","setNumber","inputHandler","evt","target","value","formReset","IdName","shortid","generate","IdNumber","onSubmit","preventDefault","formLabel","htmlFor","id","type","pattern","title","onChange","required","submitBtn","Filter","inputId","filterLabel","defaultProps","ListItem","contacts","onClick","map","item","listItem","itemText","deleteBtn","App","setContacts","filter","setFilter","useEffect","localStorage","contactsFromLocalStorage","JSON","parse","getItem","setItem","stringify","filtredContacts","toLowerCase","includes","data","newContact","prev","ContactsList","newContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.424cfa40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"styles_contactsList__19FcQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"styles_filterLabel__1PVSc\"};","import PropTypes from \"prop-types\";\nimport styles from \"./styles.module.css\";\n\nfunction ConctactsList({ children }) {\n  return <ul className={styles.contactsList}>{children}</ul>;\n}\n\nConctactsList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ConctactsList;\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./styles.module.css\";\n\nfunction Form({ sendData }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const inputHandler = (evt) => {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"number\":\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const submitHanlder = (evt) => {\n    evt.preventDefault();\n    sendData({ name, number });\n    formReset();\n  };\n\n  const formReset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const IdName = shortid.generate();\n  const IdNumber = shortid.generate();\n\n  return (\n    <form onSubmit={submitHanlder}>\n      <label className={styles.formLabel} htmlFor={IdName}>\n        Name\n        <input\n          id={IdName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={inputHandler}\n          value={name}\n          required\n        />\n      </label>\n\n      <label className={styles.formLabel} htmlFor={IdNumber}>\n        Number\n        <input\n          id={IdNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={inputHandler}\n          value={number}\n          required\n        />\n      </label>\n      <button className={styles.submitBtn} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  sendData: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./styles.module.css\";\n\nfunction Filter({ onChange, value }) {\n  function changeHandler(evt) {\n    onChange(evt.target.value);\n  }\n\n  const inputId = shortid.generate();\n  return (\n    <label className={styles.filterLabel} htmlFor={inputId}>\n      Search\n      <input\n        id={inputId}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={changeHandler}\n      />\n    </label>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\",\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport styles from \"./styles.module.css\";\n\nfunction ListItem({ contacts, onClick }) {\n  return contacts.map((item) => (\n    <li className={styles.listItem} key={item.id}>\n      <p className={styles.itemText}>\n        {item.name}: {item.number}\n      </p>\n      <button\n        className={styles.deleteBtn}\n        type=\"button\"\n        onClick={() => onClick(item.id)}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n}\n\nListItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\n\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\nimport Form from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport ListItem from \"./Components/ContactsList/ListItem\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.contacts) {\n      const contactsFromLocalStorage = JSON.parse(\n        localStorage.getItem(\"contacts\")\n      );\n      setContacts(contactsFromLocalStorage);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const FilterHandler = (value) => {\n    setFilter(value);\n  };\n\n  const addContact = (data) => {\n    const newContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n    setContacts((prev) => [...prev, newContact]);\n  };\n\n  const deleteContact = (id) => {\n    const newContacts = contacts.filter((item) => item.id !== id);\n    setContacts(newContacts);\n  };\n\n  const filtredContacts = contacts.filter((item) =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className=\"container\">\n      <Form sendData={addContact} />\n      <Filter onChange={FilterHandler} value={filter} />\n      <ContactsList>\n        <ListItem contacts={filtredContacts} onClick={deleteContact} />\n      </ContactsList>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"styles_submitBtn__2i_Xq\",\"formLabel\":\"styles_formLabel__1y8h9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"styles_listItem__1ax6D\",\"itemText\":\"styles_itemText__2SBWD\",\"deleteBtn\":\"styles_deleteBtn__2f4_3\"};"],"sourceRoot":""}